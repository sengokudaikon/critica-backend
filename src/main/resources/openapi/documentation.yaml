openapi: "3.0.3"
info:
  title: "critica_backend API"
  description: "critica_backend API"
  version: "1.0.0"
servers:
- url: "https://localhost:8080"
- url: "https://seahorse-app-qs7ri.ondigitalocean.app"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/static/index.html"
  /health:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Healthy"
  /ws:
    get:
      description: ""
      parameters:
      - name: "Connection"
        in: "header"
        required: true
        description: "Websocket Connection parameter"
        schema:
          type: "string"
      - name: "Upgrade"
        in: "header"
        required: true
        description: "Websocket Upgrade parameter"
        schema:
          type: "string"
      - name: "Sec-WebSocket-Key"
        in: "header"
        required: true
        description: "Websocket Sec-WebSocket-Key parameter"
        schema:
          type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /api/auth/refresh:
    post:
      tags:
        - "Auth"
        - "User"
      security:
        - BearerAuth: [ ]
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/RefreshToken"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/auth/register:
    post:
      tags:
        - "Auth"
        - "User"
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/CreateAccount"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "string"
  /api/auth/signIn:
    post:
      tags:
        - "Auth"
        - "User"
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SignIn"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/auth/signout:
    post:
      tags:
        - "Auth"
        - "User"
      security:
        - BearerAuth: [ ]
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SignOut"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
  /api/game/{id}:
    get:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GameResponse"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
  /api/game/{id}/addPlayer:
    put:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "204":
          description: "No Content"
          content:
            text/plain:
              schema:
                type: "object"
  /api/game/{id}/addPlayer/{playerId}:
    put:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "playerId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
                Example#2:
                  value: "Invalid ID"
        "204":
          description: "No Content"
          content:
            text/plain:
              schema:
                type: "object"
  /api/game/{id}/finish:
    post:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          text/plain:
            schema:
              type: "string"
        required: true
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
                format: "uuid"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
  /api/game/{id}/removePlayer:
    put:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "204":
          description: "No Content"
          content:
            text/plain:
              schema:
                type: "object"
  /api/game/{id}/start:
    post:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
  /api/game/create:
    post:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      requestBody:
        content:
          text/plain:
            schema:
              type: "string"
        required: true
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/list:
    get:
      tags:
        - "Game"
      security:
        - BearerAuth: [ ]
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Game"
  /api/lobby/{id}:
    get:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/addGame:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/addPlayer:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/addPlayer/{playerId}:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "playerId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/addTemporaryPlayer:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/delete:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
  /api/lobby/{id}/games:
    get:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GameResponse"
  /api/lobby/{id}/players:
    get:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PlayerResponse"
  /api/lobby/{id}/removeGame/{gameId}:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "gameId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
                Example#2:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/removePlayer:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/{id}/removePlayer/{playerId}:
    put:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "playerId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/create:
    post:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/CreateLobby"
        required: true
      responses:
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You do not have the required role to access this resource."
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You must be authenticated to access this resource."
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Name must not be empty."
                Example#2:
                  value: "Date must be in the future or now."
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/LobbyResponse"
  /api/lobby/list:
    get:
      tags:
        - "Lobby"
      security:
        - BearerAuth: [ ]
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LobbyResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RefreshToken:
      type: "object"
      properties:
        id:
          type: "string"
        refreshToken:
          type: "string"
    CreateAccount:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
        username:
          type: "string"
    SignIn:
      type: "object"
      properties:
        email:
          type: "string"
        username:
          type: "string"
        password:
          type: "string"
    SignOut:
      type: "object"
      properties:
        id:
          type: "string"
        refreshToken:
          type: "string"
    PlayerResponse:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        seat:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        role:
          type: "string"
          enum:
          - "CITIZEN"
          - "MAFIOSO"
          - "DON"
          - "DETECTIVE"
        status:
          type: "string"
          enum:
          - "INGAME"
          - "ALIVE"
          - "DEAD"
          - "REMOVED"
          - "OPW"
        inGame:
          type: "boolean"
        bonusPoints:
          type: "integer"
          format: "int32"
    StageResponse:
      type: "object"
      properties:
        type:
          type: "string"
    DayVoteResponse:
      type: "object"
      properties:
        dayNumber:
          type: "integer"
          format: "int32"
        target:
          $ref: "#/components/schemas/PlayerResponse"
        player:
          $ref: "#/components/schemas/PlayerResponse"
    GameResponse:
      type: "object"
      properties:
        id:
          type: "string"
        date:
          type: "string"
        players:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerResponse"
        currentStage:
          $ref: "#/components/schemas/StageResponse"
        nominates:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerResponse"
        votes:
          type: "array"
          items:
            $ref: "#/components/schemas/DayVoteResponse"
        mafiaShot:
          $ref: "#/components/schemas/PlayerResponse"
        detectiveCheck:
          $ref: "#/components/schemas/PlayerResponse"
        donCheck:
          $ref: "#/components/schemas/PlayerResponse"
        playersEliminated:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerResponse"
    Object:
      type: "object"
      properties: {}
    ResultRow:
      type: "object"
      properties:
        fieldIndex:
          type: "object"
    Game:
      type: "object"
      properties:
        writeValues:
          $ref: "#/components/schemas/Object"
        _readValues:
          $ref: "#/components/schemas/ResultRow"
    LobbyResponse:
      type: "object"
      properties:
        id:
          type: "string"
        date:
          type: "string"
        name:
          type: "string"
        creator:
          type: "string"
    CreateLobby:
      type: "object"
      properties:
        date:
          type: "string"
        name:
          type: "string"