openapi: "3.0.3"
info:
  title: "critica_backend API"
  description: "critica_backend API"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
  - url: "https://seahorse-app-qs7ri.ondigitalocean.app"
  - url: "https://critika.net"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/static/index.html"
  /health:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Healthy"
  /ws:
    get:
      description: ""
      parameters:
        - name: "Connection"
          in: "header"
          required: true
          description: "Websocket Connection parameter"
          schema:
            type: "string"
        - name: "Upgrade"
          in: "header"
          required: true
          description: "Websocket Upgrade parameter"
          schema:
            type: "string"
        - name: "Sec-WebSocket-Key"
          in: "header"
          required: true
          description: "Websocket Sec-WebSocket-Key parameter"
          schema:
            type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /api/admin/users/{userId}/promote:
    post:
      tags:
        - "Admin"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User promoted to admin"
  /api/admin/users/{userId}/reject:
    post:
      tags:
        - "Admin"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User promotion rejected"
  /api/admin/users/requesting-promotion:
    get:
      tags:
        - "Admin"
      security:
        - AccessToken: [ ]
      description: ""
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserResponse"
  /api/auth/refresh:
    post:
      tags:
        - "Auth"
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshToken"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
  /api/auth/register:
    post:
      tags:
        - "Auth"
        - "User"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccount"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: string
                example: "OK"
  /api/auth/signIn:
    post:
      tags:
        - "Auth"
        - "User"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignIn"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAuthToken"
  /api/auth/signout:
    post:
      tags:
        - "Auth"
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignOut"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoContent"
  /api/game/{id}/bestMove/{seat}:
    put:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{dayId}/nominate/{candidate}:
    put:
      tags:
        - "Game"
        - "Stage"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "dayId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "candidate"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{dayId}/remove/{candidate}:
    put:
      tags:
        - "Game"
        - "Stage"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "dayId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "candidate"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{dayId}/vote:
    put:
      tags:
        - "Game"
        - "Stage"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "dayId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{nightId}/detective/{seat}:
    put:
      tags:
        - "Game"
        - "Stage"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "nightId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{nightId}/don/{seat}:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "nightId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{nightId}/shot/{seat}:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "nightId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/addBonus/{seat}:
    put:
      tags:
        - "Game"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/game/{id}/addFoul/{seat}:
    put:
      tags:
        - "Game"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
            $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/game/{id}/addOPW/{seat}:
    put:
      tags:
        - "Game"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "seat"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{stageId}/finish:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "stageId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{stageId}/next:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "stageId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/stage/{stageId}/prev:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "stageId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}:
    get:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/{id}/addPlayer:
    put:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/{id}/addPlayer/{playerId}:
    put:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "playerId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/{id}/finish:
    post:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
                format: "uuid"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/{id}/removePlayer:
    put:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid ID"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/{id}/startDay/{day}:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "day"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/startNight/{night}:
    put:
      tags:
        - "Game"
        - "Stage"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "night"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/host:
    post:
      tags:
        - "Game"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            pattern: uuid
        - name: "hostId"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
  /api/game/{id}/start:
    post:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/create:
    post:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/game/list:
    get:
      tags:
        - "Game"
      security:
        - AccessToken: [ ]
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GameResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}:
    get:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/addGame:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/addPlayer:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/addPlayer/{playerId}:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "playerId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/addTemporaryPlayer:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/delete:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                type: "object"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/games:
    get:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GameResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/players:
    get:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PlayerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/removeGame/{gameId}:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "gameId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/removePlayer:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/{id}/removePlayer/{playerId}:
    put:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "playerId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/create:
    post:
      tags:
        - "Lobby"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLobby"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LobbyResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/lobby/list:
    get:
      tags:
        - "Lobby"
      security:
        - AccessToken: []
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LobbyResponse"
  /api/player:
    get:
      tags:
        - "Player"
      security:
        - AccessToken: [ ]
      description: "Get current player"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/player/{id}:
    get:
      tags:
        - "Player"
      description: "Get player by id"
      security:
          - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  example: 123e4567-e89b-12d3-a456-426614174000
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/player/{name}:
    get:
      tags:
        - "Player"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/player/enterGame/{id}:
    get:
      tags:
        - "Player"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/player/enterLobby/{id}:
    get:
      tags:
        - "Player"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/player/leaveGame:
    get:
      tags:
        - "Player"
      description: ""
      security:
        - AccessToken: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/player/leaveLobby/{id}:
    get:
      tags:
        - "Player"
      description: ""
      security:
        - AccessToken: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings:
    get:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings/change-language:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          text/plain:
            schema:
              type: "string"
        required: true
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings/change-password:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings/change-public-visibility:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: "boolean"
        required: true
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings/change-push-notifications:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: "boolean"
        required: true
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings/change-username:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
  /api/user/settings/request-promotion:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: string
  /api/user/settings/verify-email:
    post:
      tags:
        - "User"
      security:
        - AccessToken: [ ]
      description: ""
      requestBody:
        content:
          text/plain:
            schema:
              type: "string"
        required: true
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
components:
  securitySchemes:
    AccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserResponse:
      description: "User response"
      type: object
      properties:
        id:
          type: string
          example: "5f8b0a7b9d6b2b0017a9e6b1"
        email:
          type: string
          example: "test@mail.ru"
        name:
          type: string
          example: "John Doe"
    UserAuthToken:
      description: "User user token response"
      type: object
      properties:
        token:
          type: string
          example: "JWT_TOKEN"
        refresh_token:
          type: string
          example: "JWT_TOKEN"
    RefreshToken:
      type: "object"
      properties:
        id:
          type: "string"
        refreshToken:
          type: "string"
    CreateAccount:
      type: "object"
      properties:
        email:
          type: "string"
          format: "email"
          example: "johndoe@example.com"
        username:
          type: "string"
          pattern: "^[A-Za-zА-Яа-я0-9]+(?: [A-Za-zА-Яа-я0-9]+)*$"
          example: "John Doe"
        password:
          type: "string"
          pattern: "^[A-Za-z0-9!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>/?]{8,}$"
          example: "p@ssw0rd123!"
    SignIn:
      type: "object"
      properties:
        email:
          type: "string"
          format: "email"
          example: "johndoe@example.com"
        username:
          type: "string"
          pattern: "^[A-Za-zА-Яа-я0-9]+(?: [A-Za-zА-Яа-я0-9]+)*$"
          example: "John Doe"
        password:
          type: "string"
          pattern: "^[A-Za-z0-9!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>/?]{8,}$"
          example: "p@ssw0rd123!"
    SignOut:
      type: "object"
      properties:
        id:
          type: "string"
        refreshToken:
          type: "string"
    PlayerResponse:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        seat:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        role:
          type: "string"
          enum:
            - "CITIZEN"
            - "MAFIOSO"
            - "DON"
            - "DETECTIVE"
        status:
          type: "string"
          enum:
            - "INGAME"
            - "ALIVE"
            - "DEAD"
            - "REMOVED"
            - "OPW"
        inGame:
          type: "boolean"
        bonusPoints:
          type: "integer"
          format: "int32"
    StageResponse:
      type: "object"
      properties:
        type:
          type: "string"
    DayVoteResponse:
      type: "object"
      properties:
        dayNumber:
          type: "integer"
          format: "int32"
        target:
          $ref: "#/components/schemas/PlayerResponse"
        player:
          $ref: "#/components/schemas/PlayerResponse"
    GameResponse:
      type: "object"
      properties:
        id:
          type: "string"
        date:
          type: "string"
        players:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerResponse"
        currentStage:
          $ref: "#/components/schemas/StageResponse"
        nominates:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerResponse"
        votes:
          type: "array"
          items:
            $ref: "#/components/schemas/DayVoteResponse"
        mafiaShot:
          $ref: "#/components/schemas/PlayerResponse"
        detectiveCheck:
          $ref: "#/components/schemas/PlayerResponse"
        donCheck:
          $ref: "#/components/schemas/PlayerResponse"
        playersEliminated:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerResponse"
    Object:
      type: "object"
      properties: {}
    ResultRow:
      type: "object"
      properties:
        fieldIndex:
          type: "object"
    Game:
      type: "object"
      properties:
        writeValues:
          $ref: "#/components/schemas/Object"
        _readValues:
          $ref: "#/components/schemas/ResultRow"
    LobbyResponse:
      type: "object"
      properties:
        id:
          type: "string"
        date:
          type: "string"
        name:
          type: "string"
        creator:
          type: "string"
    CreateLobby:
      type: "object"
      properties:
        date:
          type: "string"
        name:
          type: "string"
    Created:
      type: "object"
      properties:
        status:
          type: "integer"
          format: "int32"
          example: 201
        message:
          type: "string"
          description: "A description of the successful creation."
          example: "OK"
      required:
        - "status"
        - "message"
    NoContent:
      type: "object"
      properties:
        status:
          type: "integer"
          format: "int32"
          example: 204
      required:
        - "status"
    Error:
      type: "object"
      properties:
        status:
          type: "integer"
          format: "int32"
          example: 400
        message:
          type: "string"
          description: "A description of the error."
          example: "Invalid ID"
      required:
        - "status"
        - "message"
  responses: 
    BadRequest:
      description: "Malformed data or otherwise invalid request"
      schema:
        $ref: "#/components/schemas/Error"
    NotFound:
      description: "The requested component was not found"
      schema:
        $ref: "#/components/schemas/Error"
    InternalServerError:
      description: "An internal server error occurred"
      schema:
        $ref: "#/components/schemas/Error"
    Forbidden:
      description: "The user does not have the required permissions to access this resource"
      schema:
        $ref: "#/components/schemas/Error"
    Unauthorized:
      description: "The user is not authenticated"
      schema:
        $ref: "#/components/schemas/Error"